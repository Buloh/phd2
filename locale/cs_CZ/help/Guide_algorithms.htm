<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><title>Guide_algorithms_cz</title></head>
<body>
<h2>Algoritmy navádění</h2><a href="#Guiding_Theory">Teorie navádění</a><br><a href="#Guide_Algorithm_Parameters">Parametry algoritmů navádění</a><br><br><h3><a name="Guiding_Theory"></a>Teorie navádění</h3>Výchozí algoritmy navádění v aplikaci <span style="font-style: italic;">PHD2</span> jsou prověřené a ve většině případů fungují velmi dobře.
&nbsp;Pokud už s naváděním nemáte zkušenosti a neznáte jeho principy, měli byste být při změnách algoritmů opatrní.
&nbsp;Dialog rozšířených nastavení v <span style="font-style: italic;">PHD2</span> však tyto úpravy usnadňuje.
&nbsp;Každý algoritmus má sadu parametrů, které určují, jak se pozorované odchylky polohy průvodní hvězdy (deflekce) převedou na korekční povely posílané montáži.<br><br>
Než se pustíme do detailů parametrů, stojí za to připomenout si základní teorii navádění a cíle, které algoritmy sledují.
&nbsp;Pokud pomineme adaptivní optiku, která funguje jinak, klasické navádění naráží na řadu výzev.
&nbsp;Snažíme se totiž rozpohybovat zařízení vážící desítky až stovky kilogramů natolik přesně, aby hvězdy na snímku nezůstávaly protáhlé.
&nbsp;Řada průvodních kamer zachytí posun hvězdy o několik mikrometrů (například 0,0002" / 0,005 mm), přesto očekáváme, že montáž a software dokážou s touto přesností sledovat oblohu celé hodiny.
Algoritmy navádění jako PHD2 si nejlépe poradí s chybami, které jsou „pomale a plynulé“, nikoli „rychlé a náhodné“.
&nbsp;Typickými zdroji pomalých, plynulých nebo předvídatelných (tedy korigovatelných) chyb jsou například:<br><ul><li>Mechanické nedokonalosti převodů v ose rektascenze, včetně periodické chyby.</li><li>Malé odchylky montáže od siderické rychlosti.</li><li>Rozumná míra vůle v ose deklinace.</li><li>Atmosférická refrakce – hvězdy se směrem k horizontu zdánlivě pohybují pomaleji.</li><li>Určité typy mechanické průhybnosti a flexe – ale <span style="font-weight: bold;">ne</span> diferenciální flexe.</li><li>Nepřesné ustavení osy rektascenze na světový pól (chyba ustavení).</li></ul>
Co naopak do výčtu nepatří a běžné navádění neumí korigovat? Bohužel poměrně dlouhý seznam včetně:<br><ul><li>Atmosférického seeingu („turbulence“).</li><li>Hlučnosti, drsnosti či vibrací převodů.</li><li>Zadrhávání a vysokého statického tření v převodech způsobeného přetažením nebo jinými mechanickými problémy.</li><li>Výrazné nevyváženosti sestavy v osách montáže.</li><li>Diferenciální flexe – rozdílného pohybu mezi obrazovým a průvodním dalekohledem.</li><li>Nárazů větru, zaklesnutých kabelů, nečistot v převodech.</li><li>A mnoha dalších vlivů…</li></ul>
Společným jmenovatelem všech algoritmů je snaha reagovat na pomalé, plynulé nebo předvídatelné deflekce a současně ignorovat zbytek.
&nbsp;To je obtížné už proto, že každá naměřená odchylka hvězdy obvykle vzniká kombinací více vlivů.
&nbsp;A aby to nebylo jednoduché, skutečné montáže nejsou dokonalé – korekce, o kterou požádáte, často nebude přesně odpovídat skutečnému pohybu.
&nbsp;Nejdůležitějším cílem algoritmů je proto vyhnout se překorigování, kdy montáž posíláte tam a zpět a navádění se nikdy neustálí.
&nbsp;Typickým přístupem je ignorovat deflekce pravděpodobně způsobené seeingem a naopak přidat korekcím „setrvačnost“ nebo „impedanci“.
&nbsp;To v praxi znamená, že korekce sledují určité pravidelné chování v souladu s předchozími zásahy a zdráhají se dělat velké změny směru nebo amplitudy.
&nbsp;Odpor vůči změně směru je obzvlášť důležitý v deklinaci, kde je častým problémem vůle.
&nbsp;Tento úvod by vám měl pomoci lépe pochopit, co algoritmy dělají a proč se některé parametry nastavují právě tak, jak uvidíte níže.<br><h3><a name="Guide_Algorithm_Parameters"></a>Parametry algoritmů navádění</h3>
Ve <span style="font-style: italic;">PHD2</span> lze většinu algoritmů použít jak pro osu rektascenze (RA), tak pro deklinaci (Dec).
&nbsp;Většina z nich obsahuje parametr <span style="font-weight: bold;"><a name="minimum_move"></a>minimum move</span>.
&nbsp;Ten slouží k potlačení příliš malých korekcí, které by stejně neměly vliv na tvar hvězdy, a mohou být způsobeny pouze krátkodobým seeingem.
&nbsp;Hodnoty se zadávají v pixelech, proto je přemýšlejte v kontextu svého obrazového měřítka a velikosti hvězd.
&nbsp;Pokud jste konfiguraci nastavili pomocí průvodce novým profilem, PHD2 min-move automaticky vypočítá pro vaše měřítko.
&nbsp;Guiding Assistant tyto hodnoty umí upravit podle toho, jak vyhodnotí vysokofrekvenční seeing.
&nbsp;Pokud pozorujete vysokou frekvenci korekcí v deklinaci a časté změny směru, pravděpodobně „honíte seeing“ a zvýšení min-move bývá jednoduchým řešením.
&nbsp;<span style="font-weight: bold;">Ze všech parametrů popsaných níže jsou právě min-move nejčastěji laděné hodnoty – měňte je klidně i během noci podle aktuálních podmínek.</span><br><br>
Algoritmus <a name="hysteresis"></a><span style="font-weight: bold;">hysteresis</span> si pamatuje historii nedávných korekcí a při výpočtu dalšího kroku je přidává k informaci o aktuální deflekci.
&nbsp;Parametr <span style="font-weight: bold;">hysteresis</span> (v procentech) udává, jakou váhu má mít historie oproti samotnému pohybu hvězdy na posledním snímku.
&nbsp;Příklad: pokud nastavíte hysteresis na 10 %, bude další korekce z 90 % vycházet z aktuální deflekce a z 10 % z minulých zásahů.
&nbsp;Vyšší hodnota vyhladí korekce, ale hrozí pomalejší reakce na skutečné změny směru.
&nbsp;Hysteresis navíc obsahuje parametr <a name="aggressiveness"></a><span style="font-weight: bold;">aggressiveness</span> (opět v procentech), který omezuje velikost korekcí a zabraňuje překorigování.
&nbsp;Pokud např. algoritmus vyhodnotí, že je třeba posunout hvězdu o 0,5 px, pak při agresivitě 100 % vyšle příkaz na plných 0,5 px; při agresivitě 60 % pouze na 0,3 px.
&nbsp;Pokud máte min-move nastavené rozumně, agresivitu obvykle není nutné měnit – dělejte to jen na základě analýzy vedené například v PHD2 LogVieweru.<br><br>
Algoritmus <a name="ResistSwitch"></a><span style="font-weight: bold;">ResistSwitch</span> se chová přesně tak, jak název naznačuje.
&nbsp;Stejně jako hysteresis sleduje historii korekcí, ale změnu směru povolí až v okamžiku, kdy je „opravdu přesvědčivá“.
&nbsp;Nejvíce se hodí pro navádění v deklinaci, kde jsou změny směru podezřelé a často vyvolají vůli.
&nbsp;Proto je ResistSwitch výchozím algoritmem pro Dec, nikoli pro RA, kde se změny směru očekávají.
&nbsp;K dispozici jsou dva parametry: agresivita (funguje stejně jako u hysteresis) a přepínač „Fast switch for large deflections“.
&nbsp;Pokud je zapnutý, PHD2 reaguje na velkou změnu směru okamžitě, jinak čeká na tři po sobě jdoucí deflekce ve stejném směru.
&nbsp;„Velká deflekce“ se definuje jako trojnásobek min-move.
&nbsp;Jestliže PHD2 reaguje na změny směru příliš rychle, dolaďte buď min-move, nebo tuto volbu vypněte.
&nbsp;Pamatujte, že v Dec platí „čím méně, tím lépe“, takže to s laděním nepřehánějte.<br><br>
Algoritmus <a name="LowPass"></a><span style="font-weight: bold;">LowPass</span> také využívá historii korekcí, ale další krok vychází z mediánu nedávných deflekcí.
&nbsp;Aktuální snímek tak má jen malý vliv a algoritmus je velmi odolný vůči rychlým změnám.
&nbsp;Součástí je výpočet trendu – parametr <span style="font-weight: bold;"><a name="slope_weight_"></a>slope weight</span> (v procentech) určuje, jak moc se má medián upravit podle trendu.
&nbsp;Pokud nastavíte slope weight na nulu, korekce bude vždy pouze mediánem.
&nbsp;Nenulová hodnota medián posune nahoru či dolů podle trendu, aby nebyl algoritmus příliš pomalý.
&nbsp;Protože je LowPass velmi odolný vůči rychlým změnám, nejlépe se hodí pro deklinaci nebo montáže s absolutními enkodéry.
&nbsp;Použití tohoto algoritmu je dnes spíše historické – PHD2 doporučuje nástupce LowPass2.<br><br>
<span style="font-weight: bold;"><a name="LowPass2"></a>LowPass2</span> je variantou původního LowPassu s jiným chováním.
&nbsp;Také si pamatuje historii, ale další krok spočítá jako lineární prodloužení předchozích korekcí (tedy podle „sklonu“).
&nbsp;Jakmile se objeví výrazná změna směru, historie se vyčistí.
&nbsp;Algoritmus má dva parametry: min-move a agresivitu.
&nbsp;Min-move funguje stejně jako u ostatních algoritmů a agresivita ještě víc tlumí velikost korekcí.
&nbsp;LowPass2 je konzervativní, vysoce impedanční algoritmus vhodný pro dobrý seeing a montáže s minimální vůlí v Dec.
&nbsp;Je doporučovaný pro montáže s přesnými enkodéry.<br><br>
<p>Algoritmus <a name="Z-filter"></a><span style="font-weight: bold;">Z-filter</span> je variací na rodinu LowPass, ale pracuje v diskrétní frekvenční oblasti („Z“ doména).
V praxi zajišťuje plnou korekci nízkofrekvenčních složek, typicky způsobených periodickou chybou.</p>

<p>Vyšší frekvence koriguje s postupně klesající agresivitou, až po nulovou odezvu.
Z-filter vám umožní používat kratší expoziční časy naváděcí kamery (např. 1 s nebo 0,5 s), aniž byste „honili seeing“.</p>

<p>Výhodou kratších expozic je menší prodleva mezi měřením a korekcí a tím pádem menší korekce.</p>

<p>Z-filter nabízí pouze dvě nastavení: Exposure Factor (XFac) a Minimum Movement (MinMo).
Virtuální expoziční čas se počítá jako reálný čas vynásobený faktorem XFac.
Vybraný virtuální čas se chová podobně jako nefiltrovaný algoritmus se stejným skutečným expozičním časem.
Příklad: expozice 1 s s faktorem 4 odpovídá virtuálním 4 s a chová se podobně jako hysteresis s agresivitou 100 % a hysteresis 0,0 při 4s expozici.
Expozice 2 s s faktorem 2 znamená virtuální 4 s a výsledky budou obdobné.
Rozdíl je v tom, že kratší reálné expozice dovolí vydávat korekce dříve a častěji, takže jsou menší.</p>

<p>Díky tomu můžete expoziční čas ladit tak, abyste optimalizovali poměr signál/šum hvězdy a reakční dobu.
Faktor XFac následně nastavíte na požadovanou odezvu.
Doporučeným výchozím bodem pro osu RA je virtuální expozice 2–4 s.
V ose Dec lze použít delší virtuální expozice, aby se omezily změny směru a související vůle.</p>

<p>Při krátkých expozicích bude na grafu navádění více vidět seeing.
Neznamená to, že je navádění horší – ostatní algoritmy spoléhají na delší expozice, aby seeing vyhladily.
Z-filter to nahrazuje faktorem XFac.</p>

<p>Z-filter má také nastavení MinMo.
Volte hodnotu podle toho, jak malé kroky dokáže vaše montáž spolehlivě provést.
U jiných algoritmů se MinMo používá i k filtraci (např. aby se omezily změny směru v Dec).
U Z-filteru se naopak doporučuje zvýšit faktor XFac.
Jde o složitější algoritmus, jehož přínos je u většiny montáží menší než u LowPass2, takže není obecně doporučen.</p>

<br>
<br>

<a name="Predictive_PEC"></a><b>Prediktivní PEC algoritmus PHD2 (PPEC)</b>

<p class="MsoNormal"><o:p>&nbsp;</o:p><b>Přehled<o:p></o:p></b></p>

<p class="MsoNormal"><o:p>&nbsp;</o:p>Algoritmus PPEC se od ostatních v PHD2 liší tím, že obsahuje modelování a predikci.&nbsp;
Analyzuje chování montáže v reálném čase a po dokončení analýzy dokáže počítat korekce ještě předtím, než se opakující chyba na senzoru znovu projeví.&nbsp;
Proaktivní korekce redukují prodlevu inherentní klasickému navádění a mohou výrazně zlepšit výsledky.&nbsp;
Ostatní algoritmy jsou čistě reaktivní – korekce vysílají až po detekci chyby na čipu.&nbsp;
</p>

<p class="MsoNormal"><o:p>&nbsp;</o:p>Jakmile navádění začne, algoritmus průběžně analyzuje chování montáže a hledá opakující se (tedy předvídatelné) chyby.&nbsp;
Využívá přitom sofistikovaný model založený na gaussovských procesech, který vyvinul výzkumný tým z Max-Planck-Institutu v Německu.&nbsp;
Matematické detaily najdete v publikaci uvedené zde:</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p><a href="http://ieeexplore.ieee.org/document/7105398/?reload=true">http://ieeexplore.ieee.org/document/7105398/?reload=true</a></p>


<p class="MsoNormal"><o:p></o:p>PPEC se obvykle používá pro osu RA, kde zbytky periodické chyby a další související odchylky nejčastěji zhoršují přesnost sledování.&nbsp; </p>
Algoritmus využívá více časových měřítek pro popis chování systému:</p>


<ul><li>Krátkodobé: vysokofrekvenční chyby způsobené např. hrubostí převodů nebo seeingem.</li><li>Střednědobé: reziduální periodické chyby, typicky s periodou kratší nebo rovnou periodě šneku.</li><li>Dlouhodobé: setrvalý drift a nízkofrekvenční harmonické složky vznikající interakcí více převodů.</li></ul>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Krátkodobé chování slouží k identifikaci nepředvídatelného šumu, který se v modelu potlačí, aby bylo možné lépe rozpoznat předvídatelné složky.&nbsp;
U většiny montáží je nejdůležitější složkou právě střednědobá komponenta.&nbsp;
Pokud dodržujete osvědčené postupy, máte v montáži uloženou vlastní korekci periodické chyby (PEC).&nbsp;
Tím snížíte práci, kterou musí PHD2 odvádět, a navíc je PEC uložený přímo v montáži natrvalo.&nbsp;
To je výhodnější než pokaždé měřit periodickou chybu znovu během focení.&nbsp;
PEC v montáži ale nikdy není perfektní a i při aktivním PECu často pozorujeme zbytkové chyby.
&nbsp;Vznikají například tehdy, když se chyba objevuje na frekvenci, která není harmonická k periodě šneku – většina PECů to neumí řešit.
&nbsp;Další rezidua vznikají, pokud závisí na zatížení montáže nebo pokud se chování montáže od poslední kalibrace PECu změnilo.
&nbsp;PPEC dokáže tyto chyby účinně omezit, protože na periodu šneku navázaný není a průběžně analyzuje aktuální chování montáže.</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>PPEC také detekuje a proaktivně koriguje drift.&nbsp;
Drift běžné algoritmy zvládnou také, ale korekce vždy přichází s jistou prodlevou.&nbsp;
Při některých scénářích – například u spektroskopie, fotometrie nebo při navádění komet – může být tato prodleva problém, takže PPEC nabídne lepší výsledky.&nbsp;</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Protože PPEC potřebuje data pro trénink, trvá typicky zhruba dvě periody šneku, než model plně zafunguje.&nbsp;
V průběhu učení se algoritmus chová podobně jako hysteresis, takže neuvidíte žádnou výraznou ztrátu výkonu – naopak, jak model dozrává, navádění se postupně zlepšuje a algoritmus plynule přechází do prediktivního režimu.&nbsp;</p>
Zlepšení bude patrné ještě dřív, než se model zcela naučí střednědobé chování montáže.</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Protože model PPEC závisí na aktuálním stavu převodů, je třeba jej „přeškolit“, pokud montáž přejede na novou pozici o velký úhel.&nbsp;
Z tohoto důvodu se model neukládá mezi relacemi – i proto se hodí mít v montáži interní PEC.&nbsp;
Model PPEC však zůstává zachovaný během ditheringu i během pauz (např. při ostření), pokud je navádění pouze pozastavené.&nbsp;</p>
Při běžném focení jednoho objektu několik hodin s občasným ditherem tak model zůstává platný.&nbsp;
Trénování i přepínání režimů probíhá automaticky, takže se o ně nemusíte starat.</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p><b>Detail algoritmu<o:p></o:p></b></p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Po ukončení tréninku spočítá PPEC korekci ze dvou složek.&nbsp;
Jedna je reaktivní – vychází z aktuálního posunu hvězdy.
&nbsp;Druhá je prediktivní – vychází z gaussovského modelu vytvořeného během tréninku.
&nbsp;Obě složky mají vlastní zisk (gain/aggressiveness), takže výsledná korekce je součtem:</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>&nbsp;&nbsp;&nbsp; Korekce = (predikovaná hodnota × predictive gain) + (aktuální odchylka × reactive gain)</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Parametry <b>predictive gain</b> a <b>reactive gain</b> jsou dostupné v dialogu rozšířených nastavení, přičemž výchozí hodnoty by měly fungovat pro většinu montáží.&nbsp;
Buďte velmi opatrní při jejich úpravách – nevhodné nastavení může navádění zhoršit.
&nbsp;Obě složky jsou vektory a mohou mít opačnou polaritu (východ/západ), takže součet gainů nemusí být menší než 100 % – přesto se vyhněte překorigování.</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Během tréninku musí algoritmus najít periodické chyby v pohybu hvězdy.&nbsp;
Pro první pokusy můžete zadat periodu šneku jako výchozí hodnotu parametru <b>period length</b>.&nbsp;
Doporučujeme ponechat volbu „auto-adjust period“ zapnutou, dokud nepoznáte vlastní periodickou chybu – algoritmus pak periodu doladí sám.
Jakmile budete mít výsledky ověřené, můžete volbu vypnout, aby se algoritmus soustředil jen na nejdůležitější frekvenci.
Stejně tak pokud máte montáž s periodickou chybou na neharmonické frekvenci, vypnutí auto-adjust je vhodné.
Znalost této frekvence vyžaduje FFT analýzu, kterou nabízí nástroj PHD LogViewer.</p>
<p class="MsoNormal">Parametr „<span style="font-weight: bold;">Retain model (% period)</span>" určuje, jak dlouho může montáž sledovat bez navádění, aniž by se model resetoval.
&nbsp;Udává se jako procento aktuální periody a hodí se například při autofokusu, kdy montáž dál sleduje siderickou rychlost, ale korekce se neposílají.
&nbsp;Platí i pro změny pozice v RA směrem na západ.
&nbsp;Pokud hodnotu zvýšíte nad výchozích 40 %, dávejte pozor – dlouhé sledování bez korekcí způsobí, že model ztratí přesnost, a reset pak bývá lepší.
&nbsp;Kdy k tomu dojde, závisí na montáži a podmínkách, takže případně experimentujte.</p>


<p class="MsoNormal"><o:p>&nbsp;</o:p>Parametr „<b>min-move</b>“ ovlivňuje jen reaktivní složku algoritmu.&nbsp;
Pokud je odchylka menší než tato hodnota, reaktivní část vyšle nulu.
&nbsp;Prediktivní složka se však i tak spočítá a aplikuje.</p>
<br><br><br>&nbsp;&nbsp;</body></html>
